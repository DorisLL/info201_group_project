chance_of_rain <- (chance_of_rain * 0.5)
}
## make an if statement that checks whether you love cookies
## if you don't, give a reason why not
if(I_love_cookies){
cat("I love em!")
}else{
cat("They're too sweet sometimes")
}
## Finally print out a sentence that says 'The chance of rain in Seattle is (the number stored in chance_of_rain variable) percent'
## (You are doing predictive analysis here :-)
cat("The chance of rain in Seattle is " + chance_of_rain + " percent")
## Finally print out a sentence that says 'The chance of rain in Seattle is (the number stored in chance_of_rain variable) percent'
## (You are doing predictive analysis here :-)
cat("The chance of rain in Seattle is ",chance_of_rain," percent")
install.packages("stringr")
library("stringr")
library("stringr")
library("stringr")
str_pad("justice", 10, "left", "~")
## Create a numeric variable `my_age` that is equal to your age
my_age <- 18
## Create a variable `my_name` that is equal to your first name
my_name <- "Meghana"
## Using multiplication, create a variable `minutes_in_day` that is equal to the number of minutes in a day
minutes_in_day <- 24 * 60
## Using multiplication, create a variable `hours_in_year` that is the number of hours in a year
hours_in_year <- 24 * 365
## Create a variable `minutes_rule` that is a boolean value (TRUE/FALSE) by logical operations
## It should be TRUE if there are more minutes in a day than hours in a year, otherwise FALSE
minutes_rule <- minutes_in_day > hours_in_year
## Compute and print the following a bit useful numbers.
## Assign the results to suitably named variables.
##
## How many seconds are there in year?
seconds_in_year <- hours_in_year * minutes_in_day * 60
## Compute and print the following a bit useful numbers.
## Assign the results to suitably named variables.
##
## How many seconds are there in year?
seconds_in_year <- 60 * 60 * hours_in_year
## How many seconds is a typical human lifetime?
seconds_in_lifetime <- seconds_in_year * 79
## Age of the universe is 13.8 billion years.  What is it's age in seconds?
seconds_in_universe <- 13.8 * 1,000,000,000 * seconds_in_year
## Age of the universe is 13.8 billion years.  What is it's age in seconds?
seconds_in_universe <- 13.8 * 1000000000 * seconds_in_year
numbers <- 700:999
numbers
as.Date()
as.Date(Sys.Date)
Sys.Date
as.Date("2018-12-15")
as.Date(Sys.Date())
install.package("lubridate")
install.packages("lubridate")
library("lubridate")
getwd()
cat("hello")
name <- "Meghana"
cat("Hello ", name)
cat("Hello", name)
cat("Hello", name, "is my name")
age <- 7
cat("Hello", name, "is my name and I am", age, "years old.")
cat("Hello, my name is", name, "and I'm", age, "years old.")
### -------------------- Working with functions --------------------
make_introduction <- function(name, age){
message <- cat("Hello! My name is", name, "and I'm", age, "years old.")
}
## Create a variable `my_intro` by passing your variables `my_name` and `my_age` into your `make_introduction`
## function
my_intro <- make_introduction(my_name, my_age)
return(message)
## Create a variable `my_intro` by passing your variables `my_name` and `my_age` into your `make_introduction`
## function
my_intro <- make_introduction(my_name, my_age)
## Create a variable `my_intro` by passing your variables `my_name` and `my_age` into your `make_introduction`
## function
my_intro <- make_introduction(my_name, my_age)
return(cat("Hello! My name is", name, "and I'm", age, "years old."))
## Create a variable `my_intro` by passing your variables `my_name` and `my_age` into your `make_introduction`
## function
my_intro <- make_introduction(my_name, my_age)
## Create a variable `my_intro` by passing your variables `my_name` and `my_age` into your `make_introduction`
## function
my_intro <- make_introduction(my_name, my_age)
## Create a variable `casual_intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my_intro`
## variable
causual_intro <-
## Create a new variable `loud_intro`, which is your `my_intro` variable in all upper-case letters
loud_intro <- toupper(my_intro)
## Create a variable `casual_intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my_intro`
## variable
causual_intro <- gsub("Hello, my name is ", "Hey, I'm", my_intro)
my_intro
cat(my_intro)
## Create a new variable `loud_intro`, which is your `my_intro` variable in all upper-case letters
loud_intro <- toupper(my_intro)
## Create a new variable `quiet_intro`, which is your `my_intro` variable in all lower-case letters
quiet_intro <- tolower(my_intro)
## Create a new variable capitalized, which is your `my_intro` variable with each word capitalized
## hint: consult the stringr function `str_to_title`
capitalized <- str_to_title(my_intro)
## Demonstrate that your approach is successful by passing a vector of courses to your function
## For example,
RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
gsub(0:9, "", elements)
}
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
## Demonstrate that your approach is successful by passing a vector of courses to your function
## For example,
testCase1 <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
gsub(0, "", elements)
gsub(1, "", elements)
gsub(2, "", elements)
gsub(3, "", elements)
gsub(4, "", elements)
gsub(5, "", elements)
gsub(6, "", elements)
gsub(7, "", elements)
gsub(8, "", elements)
gsub(9, "", elements)
}
cat(testCase1)
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")
)
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
gsub(1, "", elements)
}
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
gsub(1, "", elements)
gsub(0, "", elements)
}
cat(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
gsub(1, "", elements)
## Demonstrate that your approach is successful by passing a vector of courses to your function
## For example,
testCase1 <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
gsub(1, "", elements)
}
cat(casual_intro)
## Create a variable `casual_intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my_intro`
## variable
casual_intro <- gsub("Hello, my name is ", "Hey, I'm", my_intro)
cat(casual_intro)
### -------------------- Working with vectors --------------------
movies <- c("Kingsman","Mamma Mia","Now You See Me 2","Harry Potter Chamber of Secrets","Iron Man","Ocean's 8")
top_three <- movies[c(1,2,3)]
excited <- top_three + " is a great movie!"
without_four <- movies[-4]
numbers <- 700:999
len <- length(numbers)
numbers_mean <- mean(numbers)
numbers_median <- median(numbers)
lower_numbers <- 500:699
all_numbers <- lower_numbers + numbers
## Define a function called `bday_intro` that takes in three arguments:
## a name, an age, and a character string for your next (upcoming) birthday.
## This method should return a character string of the format:
##  "Hello, my name is {name} and I'm {age} years old. In {N} days I'll be {new_age}"
## You should utilize your `make_introduction` function from Part 1, and compute {N} and {new_age} in your
## function
bday_intro <- function(name, age, next_birthday){
return(cat("Hello, my name is", name, "and I'm", age, "years old. In", next_birthday-today, "days I'll be", my_age+1))
}
my_bday_intro <- bday_intro(my_name, my_age, as.Date("2018-11-01"))
days_to_break <- winter_break - today
winter_break <- as.Date("2018-12-15")
days_to_break <- winter_break - today
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
install.packages("stringr")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
cat(top_three)
excited <- paste(top_three, "is a great movie!")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
all_numbers <- numbers + lower_numbers
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
return(cat("Hello, my name is", name, "and I'm", age, "years old.", "/n"))
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
all_numbers <- c(lower_numbers, numbers)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
return(cat("Hello, my name is", name, "and I'm", age, "years old. In", next_birthday-today, "days I'll be", my_age+1, "."))
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
return(cat("Hello, my name is", name, "and I'm", age, "years old. In", next_birthday-today, "days I'll be", my_age + 1, "."))
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
return(cat("Hello, my name is", name, "and I'm", age, "years old. In", next_birthday-today, "days I'll be", my_age+1))
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
toupper(my_name)
gsub("M", "R", my_name)
cat(my_intro)
make_introduction("Meghana", 18)
my_intro <- make_introduction("Meghana", 18)
gsub("Hello, my name is ", "Hey, I'm", my_intro)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
cat(my_intro)
my_intro <- make_introduction(my_name, my_age)
cat(gsub("Hello, my name is", "Hey, I'm", my_intro))
blah <- gsub("Hello, my name is", "Hey, I'm", my_intro)
cat(my_intro)
cat(my_bday_intro)
my_intro
my_bday_intro
my_intro <- make_introduction(my_name, my_age)
toupper(my_intro)
toupper("Hello, my name is Meghana and I'm 18 years old.")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
cat(without_four)
cat(len)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
install.packages("lubridate")
as.data.frame(installed.packages()
as.data.frame(installed.packages())
cat(c(0:9))
### -------------------- Challenge --------------------
## Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a
## *vector of strings*.
RemoveDigits <- function(elements){
for(number in c(0:9)){
gsub(number, "", elements)
}
}
cat(testCase1)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
elements[elements > 0]
c(-5:5)
postives <- function(elements){
for(number in elements){
if(number < 0){
elements[number] <- 0
}
}
}
elements <- c(-5:5)
postives <- function(elements){
for(number in elements){
if(number < 0){
elements[number] <- 0
}
}
}
cat(elements)
cat(positives(elements))
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
cat(occurrences)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
elements <- c("INFO 201", "CSE 142", "mps-803c")
gsub(0:9, "", elements)
gsub(0, "", elements)
gsub(1, "", elements)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
install.packages("stringr")
library("stringr")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_intro
### -------------------- Challenge --------------------
RemoveDigits <- function(elements){
for(number in c(0:9)){
elements <- gsub(number, "", elements)
}
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
RemoveDigits <- function(elements){
for(number in c(0:9)){
elements <- gsub(number, "", elements)
}
}
RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
cat(elements);
RemoveDigits <- function(elements){
for(number in c(0:9)){
elements <- gsub(number, "", elements)
}
return(elements)
}
testCase1 <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
cat(testCase1)
## Demonstrate that your approach is successful by passing a vector of courses to your function
## For example,
schdule_without_digits <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
schedule_without_digits <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
grepl("0:9", schedule_without_digits)
if (grepl("0:9", schedule_without_digits)){
print("Yay!")
} else {
print("Oh No!")
}
if (grepl("0:9", schedule_without_digits)){
print("Yay!")
} else {
print("Oh No!")
}
RemoveDigits <- function(elements){
for(number in c(0:9)){
elements <- gsub(number, "", elements)
}
return(elements)
}
schedule_without_digits <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
if (grepl("0:9", schedule_without_digits)){
print("Yay!")
} else {
print("Oh No!")
}
schedule_without_digits
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
contains_digits <- grepl("0:9", schedule_without_digits)
if (contains_digits){
print("Oh No!")
} else {
print("Yay!")
}
RemoveDigits <- function(elements){
for(number in c(0:9)){
elements <- gsub(number,"", elements)
}
return(elements)
}
schedule_without_digits <- RemoveDigits(c("INFO 201", "CSE 142", "mps-803c"))
schedule_without_digits
contains_digits <- grepl("0:9", schedule_without_digits)
contains_digits
contains_digits <- grep("0:9", schedule_without_digits)
contains_digits
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
contains_digits
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_intro <- make_introduction(my_name, my_age)
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
casual_intro
gsub("M", "R", my_intro)
cat(gsub("M", "R", my_intro))
my_intro <- make_introduction(my_name, my_age)
casual_intro <- sub("M", "R", my_intro)
casual_intro
casual_intro <-gsub("M", "R", my_intro)
casual_intro
my_name
cat(gsub("M","R", my_name))
cat(gsub("Meghana","She isnt here", my_name))
toupper(make_introduction(my_name, my_age))
str_to_upper(make_introduction(my_name, my_age))
str_to_upper("hi my name is meghana")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_intro <- make_introduction(my_name, my_age)
loud_intro <- toupper(toString(my_intro))
loud_intro
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
library("stringr")
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_intro <- make_introduction(my_name, my_age)
UPPPPP <- toupper(my_intro)
cat(UPPPPP)
print(UPPPPP)
my_intro <- make_introduction(my_name, my_age)
aschar <- as.character(my_intro)
cat(aschar)
print(aschar)
make_introduction <- function(name, age){
message <- "Hello, my name is" + name + " and I'm " + age + " years old."
return(message)
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
make_introduction <- function(name, age){
message <- "Hello, my name is" + as.character(name) + " and I'm " + as.character(age) + " years old."
return(message)
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
make_introduction <- function(name, age){
message <- cat("Hello, my name is", name, "and I'm", age, "years old.")
return(message)
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
message
cat(message)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_bday_intro
my_intro
casual_intro
loud_intro
quiet_intro
capitalized
occurrences
return(paste("Hello, my name is", name, "and I'm", age, "years old."))
return(paste("Hello, my name is", name, "and I'm", age, "years old."))
### -------------------- Working with functions --------------------
make_introduction <- function(name, age){
return(paste("Hello, my name is", name, "and I'm", age, "years old."))
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
my_intro
quiet_intro
loud_intro
casual_intro
capitalized
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
contains_digits
as.character(answers)
for(number in c(0:9)) {
answers <- grepl(number, schedule_without_digits)
if (as.character(answers)){
}
}
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
answers
as.character(answers)
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
as.character(answers)[1]
for(number in c(0:9)) {
answers <- as.character(grepl(number, schedule_without_digits))
}
answers
answers.length
answers[1]
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
answers
schedule_without_digits
source('~/Desktop/Info201/A2/a2-core-programming-mvinnakota99/assignment.R')
install.packages("dplyr")
library("dplyr")
install.packages("httr")
source('~/Desktop/Info201/A7/a7-collaboration-bb1/assignment.R')
Sys.info()["user"]
setwd("~/Desktop/Info201/info201_group_project/crime_in_seattle")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
